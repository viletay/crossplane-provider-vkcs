// SPDX-FileCopyrightText: 2023 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type SecurityGroupRuleInitParameters struct {

	// optional string →  A description of the rule. Changing this creates a new security group rule.
	// A description of the rule. Changing this creates a new security group rule.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// required string →  The direction of the rule, valid values are ingress or egress. Changing this creates a new security group rule.
	// The direction of the rule, valid values are __ingress__ or __egress__. Changing this creates a new security group rule.
	Direction *string `json:"direction,omitempty" tf:"direction,omitempty"`

	// optional deprecated string →  The layer 3 protocol type, the only valid value is IPv4. Changing this creates a new security group rule. Deprecated Only IPv4 can be used as ethertype. This argument is deprecated, please do not use it.
	// The layer 3 protocol type, the only valid value is __IPv4__. Changing this creates a new security group rule. **Deprecated** Only IPv4 can be used as ethertype. This argument is deprecated, please do not use it.
	Ethertype *string `json:"ethertype,omitempty" tf:"ethertype,omitempty"`

	// optional number →  The higher part of the allowed port range, valid integer value needs to be between 1 and 65535. To specify all ports, port_range_min and port_range_max arguments must be absent. Changing this creates a new security group rule.
	// The higher part of the allowed port range, valid integer value needs to be between 1 and 65535. To specify all ports, `port_range_min` and `port_range_max` arguments must be absent. Changing this creates a new security group rule.
	PortRangeMax *float64 `json:"portRangeMax,omitempty" tf:"port_range_max,omitempty"`

	// optional number →  The lower part of the allowed port range, valid integer value needs to be between 1 and 65535. To specify all ports, port_range_min and port_range_max arguments must be absent. Changing this creates a new security group rule.
	// The lower part of the allowed port range, valid integer value needs to be between 1 and 65535. To specify all ports, `port_range_min` and `port_range_max` arguments must be absent. Changing this creates a new security group rule.
	PortRangeMin *float64 `json:"portRangeMin,omitempty" tf:"port_range_min,omitempty"`

	// optional string →  The layer 4 protocol type, valid values are following. Changing this creates a new security group rule. This is required if you want to specify a port range.
	// The layer 4 protocol type, valid values are following. Changing this creates a new security group rule. This is required if you want to specify a port range.
	// * __tcp__
	// * __udp__
	// * __icmp__
	// * __ah__
	// * __dccp__
	// * __egp__
	// * __esp__
	// * __gre__
	// * __igmp__
	// * __ospf__
	// * __pgm__
	// * __rsvp__
	// * __sctp__
	// * __udplite__
	// * __vrrp__
	Protocol *string `json:"protocol,omitempty" tf:"protocol,omitempty"`

	// optional string →  The region in which to obtain the networking client. A networking client is needed to create a port. If omitted, the region argument of the provider is used. Changing this creates a new security group rule.
	// The region in which to obtain the networking client. A networking client is needed to create a port. If omitted, the `region` argument of the provider is used. Changing this creates a new security group rule.
	Region *string `json:"region,omitempty" tf:"region,omitempty"`

	// optional string →  The remote CIDR, the value needs to be a valid CIDR (i.e. 192.168.0.0/16). Changing this creates a new security group rule. Note: Only one of remote_group_id or remote_ip_prefix may be set.
	// The remote CIDR, the value needs to be a valid CIDR (i.e. 192.168.0.0/16). Changing this creates a new security group rule. _note_ Only one of `remote_group_id` or `remote_ip_prefix` may be set.
	RemoteIPPrefix *string `json:"remoteIpPrefix,omitempty" tf:"remote_ip_prefix,omitempty"`

	// optional string →  SDN to use for this resource. Must be one of following: "neutron", "sprut". Default value is project's default SDN.
	// SDN to use for this resource. Must be one of following: "neutron", "sprut". Default value is project's default SDN.
	Sdn *string `json:"sdn,omitempty" tf:"sdn,omitempty"`
}

type SecurityGroupRuleObservation struct {

	// optional string →  A description of the rule. Changing this creates a new security group rule.
	// A description of the rule. Changing this creates a new security group rule.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// required string →  The direction of the rule, valid values are ingress or egress. Changing this creates a new security group rule.
	// The direction of the rule, valid values are __ingress__ or __egress__. Changing this creates a new security group rule.
	Direction *string `json:"direction,omitempty" tf:"direction,omitempty"`

	// optional deprecated string →  The layer 3 protocol type, the only valid value is IPv4. Changing this creates a new security group rule. Deprecated Only IPv4 can be used as ethertype. This argument is deprecated, please do not use it.
	// The layer 3 protocol type, the only valid value is __IPv4__. Changing this creates a new security group rule. **Deprecated** Only IPv4 can be used as ethertype. This argument is deprecated, please do not use it.
	Ethertype *string `json:"ethertype,omitempty" tf:"ethertype,omitempty"`

	// string →  ID of the resource.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// optional number →  The higher part of the allowed port range, valid integer value needs to be between 1 and 65535. To specify all ports, port_range_min and port_range_max arguments must be absent. Changing this creates a new security group rule.
	// The higher part of the allowed port range, valid integer value needs to be between 1 and 65535. To specify all ports, `port_range_min` and `port_range_max` arguments must be absent. Changing this creates a new security group rule.
	PortRangeMax *float64 `json:"portRangeMax,omitempty" tf:"port_range_max,omitempty"`

	// optional number →  The lower part of the allowed port range, valid integer value needs to be between 1 and 65535. To specify all ports, port_range_min and port_range_max arguments must be absent. Changing this creates a new security group rule.
	// The lower part of the allowed port range, valid integer value needs to be between 1 and 65535. To specify all ports, `port_range_min` and `port_range_max` arguments must be absent. Changing this creates a new security group rule.
	PortRangeMin *float64 `json:"portRangeMin,omitempty" tf:"port_range_min,omitempty"`

	// optional string →  The layer 4 protocol type, valid values are following. Changing this creates a new security group rule. This is required if you want to specify a port range.
	// The layer 4 protocol type, valid values are following. Changing this creates a new security group rule. This is required if you want to specify a port range.
	// * __tcp__
	// * __udp__
	// * __icmp__
	// * __ah__
	// * __dccp__
	// * __egp__
	// * __esp__
	// * __gre__
	// * __igmp__
	// * __ospf__
	// * __pgm__
	// * __rsvp__
	// * __sctp__
	// * __udplite__
	// * __vrrp__
	Protocol *string `json:"protocol,omitempty" tf:"protocol,omitempty"`

	// optional string →  The region in which to obtain the networking client. A networking client is needed to create a port. If omitted, the region argument of the provider is used. Changing this creates a new security group rule.
	// The region in which to obtain the networking client. A networking client is needed to create a port. If omitted, the `region` argument of the provider is used. Changing this creates a new security group rule.
	Region *string `json:"region,omitempty" tf:"region,omitempty"`

	// optional string →  The remote group id, the value needs to be an ID of a security group in the same tenant. Changing this creates a new security group rule. Note: Only one of remote_group_id or remote_ip_prefix may be set.
	// The remote group id, the value needs to be an ID of a security group in the same tenant. Changing this creates a new security group rule. _note_ Only one of `remote_group_id` or `remote_ip_prefix` may be set.
	RemoteGroupID *string `json:"remoteGroupId,omitempty" tf:"remote_group_id,omitempty"`

	// optional string →  The remote CIDR, the value needs to be a valid CIDR (i.e. 192.168.0.0/16). Changing this creates a new security group rule. Note: Only one of remote_group_id or remote_ip_prefix may be set.
	// The remote CIDR, the value needs to be a valid CIDR (i.e. 192.168.0.0/16). Changing this creates a new security group rule. _note_ Only one of `remote_group_id` or `remote_ip_prefix` may be set.
	RemoteIPPrefix *string `json:"remoteIpPrefix,omitempty" tf:"remote_ip_prefix,omitempty"`

	// optional string →  SDN to use for this resource. Must be one of following: "neutron", "sprut". Default value is project's default SDN.
	// SDN to use for this resource. Must be one of following: "neutron", "sprut". Default value is project's default SDN.
	Sdn *string `json:"sdn,omitempty" tf:"sdn,omitempty"`

	// required string →  The security group id the rule should belong to, the value needs to be an ID of a security group in the same tenant. Changing this creates a new security group rule.
	// The security group id the rule should belong to, the value needs to be an ID of a security group in the same tenant. Changing this creates a new security group rule.
	SecurityGroupID *string `json:"securityGroupId,omitempty" tf:"security_group_id,omitempty"`
}

type SecurityGroupRuleParameters struct {

	// optional string →  A description of the rule. Changing this creates a new security group rule.
	// A description of the rule. Changing this creates a new security group rule.
	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// required string →  The direction of the rule, valid values are ingress or egress. Changing this creates a new security group rule.
	// The direction of the rule, valid values are __ingress__ or __egress__. Changing this creates a new security group rule.
	// +kubebuilder:validation:Optional
	Direction *string `json:"direction,omitempty" tf:"direction,omitempty"`

	// optional deprecated string →  The layer 3 protocol type, the only valid value is IPv4. Changing this creates a new security group rule. Deprecated Only IPv4 can be used as ethertype. This argument is deprecated, please do not use it.
	// The layer 3 protocol type, the only valid value is __IPv4__. Changing this creates a new security group rule. **Deprecated** Only IPv4 can be used as ethertype. This argument is deprecated, please do not use it.
	// +kubebuilder:validation:Optional
	Ethertype *string `json:"ethertype,omitempty" tf:"ethertype,omitempty"`

	// optional number →  The higher part of the allowed port range, valid integer value needs to be between 1 and 65535. To specify all ports, port_range_min and port_range_max arguments must be absent. Changing this creates a new security group rule.
	// The higher part of the allowed port range, valid integer value needs to be between 1 and 65535. To specify all ports, `port_range_min` and `port_range_max` arguments must be absent. Changing this creates a new security group rule.
	// +kubebuilder:validation:Optional
	PortRangeMax *float64 `json:"portRangeMax,omitempty" tf:"port_range_max,omitempty"`

	// optional number →  The lower part of the allowed port range, valid integer value needs to be between 1 and 65535. To specify all ports, port_range_min and port_range_max arguments must be absent. Changing this creates a new security group rule.
	// The lower part of the allowed port range, valid integer value needs to be between 1 and 65535. To specify all ports, `port_range_min` and `port_range_max` arguments must be absent. Changing this creates a new security group rule.
	// +kubebuilder:validation:Optional
	PortRangeMin *float64 `json:"portRangeMin,omitempty" tf:"port_range_min,omitempty"`

	// optional string →  The layer 4 protocol type, valid values are following. Changing this creates a new security group rule. This is required if you want to specify a port range.
	// The layer 4 protocol type, valid values are following. Changing this creates a new security group rule. This is required if you want to specify a port range.
	// * __tcp__
	// * __udp__
	// * __icmp__
	// * __ah__
	// * __dccp__
	// * __egp__
	// * __esp__
	// * __gre__
	// * __igmp__
	// * __ospf__
	// * __pgm__
	// * __rsvp__
	// * __sctp__
	// * __udplite__
	// * __vrrp__
	// +kubebuilder:validation:Optional
	Protocol *string `json:"protocol,omitempty" tf:"protocol,omitempty"`

	// optional string →  The region in which to obtain the networking client. A networking client is needed to create a port. If omitted, the region argument of the provider is used. Changing this creates a new security group rule.
	// The region in which to obtain the networking client. A networking client is needed to create a port. If omitted, the `region` argument of the provider is used. Changing this creates a new security group rule.
	// +kubebuilder:validation:Optional
	Region *string `json:"region,omitempty" tf:"region,omitempty"`

	// optional string →  The remote group id, the value needs to be an ID of a security group in the same tenant. Changing this creates a new security group rule. Note: Only one of remote_group_id or remote_ip_prefix may be set.
	// The remote group id, the value needs to be an ID of a security group in the same tenant. Changing this creates a new security group rule. _note_ Only one of `remote_group_id` or `remote_ip_prefix` may be set.
	// +crossplane:generate:reference:type=SecurityGroup
	// +kubebuilder:validation:Optional
	RemoteGroupID *string `json:"remoteGroupId,omitempty" tf:"remote_group_id,omitempty"`

	// Reference to a SecurityGroup to populate remoteGroupId.
	// +kubebuilder:validation:Optional
	RemoteGroupIDRef *v1.Reference `json:"remoteGroupIdRef,omitempty" tf:"-"`

	// Selector for a SecurityGroup to populate remoteGroupId.
	// +kubebuilder:validation:Optional
	RemoteGroupIDSelector *v1.Selector `json:"remoteGroupIdSelector,omitempty" tf:"-"`

	// optional string →  The remote CIDR, the value needs to be a valid CIDR (i.e. 192.168.0.0/16). Changing this creates a new security group rule. Note: Only one of remote_group_id or remote_ip_prefix may be set.
	// The remote CIDR, the value needs to be a valid CIDR (i.e. 192.168.0.0/16). Changing this creates a new security group rule. _note_ Only one of `remote_group_id` or `remote_ip_prefix` may be set.
	// +kubebuilder:validation:Optional
	RemoteIPPrefix *string `json:"remoteIpPrefix,omitempty" tf:"remote_ip_prefix,omitempty"`

	// optional string →  SDN to use for this resource. Must be one of following: "neutron", "sprut". Default value is project's default SDN.
	// SDN to use for this resource. Must be one of following: "neutron", "sprut". Default value is project's default SDN.
	// +kubebuilder:validation:Optional
	Sdn *string `json:"sdn,omitempty" tf:"sdn,omitempty"`

	// required string →  The security group id the rule should belong to, the value needs to be an ID of a security group in the same tenant. Changing this creates a new security group rule.
	// The security group id the rule should belong to, the value needs to be an ID of a security group in the same tenant. Changing this creates a new security group rule.
	// +crossplane:generate:reference:type=SecurityGroup
	// +kubebuilder:validation:Optional
	SecurityGroupID *string `json:"securityGroupId,omitempty" tf:"security_group_id,omitempty"`

	// Reference to a SecurityGroup to populate securityGroupId.
	// +kubebuilder:validation:Optional
	SecurityGroupIDRef *v1.Reference `json:"securityGroupIdRef,omitempty" tf:"-"`

	// Selector for a SecurityGroup to populate securityGroupId.
	// +kubebuilder:validation:Optional
	SecurityGroupIDSelector *v1.Selector `json:"securityGroupIdSelector,omitempty" tf:"-"`
}

// SecurityGroupRuleSpec defines the desired state of SecurityGroupRule
type SecurityGroupRuleSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     SecurityGroupRuleParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider SecurityGroupRuleInitParameters `json:"initProvider,omitempty"`
}

// SecurityGroupRuleStatus defines the observed state of SecurityGroupRule.
type SecurityGroupRuleStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        SecurityGroupRuleObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// SecurityGroupRule is the Schema for the SecurityGroupRules API. Manages a security group rule resource within VKCS.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,vkcs}
type SecurityGroupRule struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.direction) || (has(self.initProvider) && has(self.initProvider.direction))",message="spec.forProvider.direction is a required parameter"
	Spec   SecurityGroupRuleSpec   `json:"spec"`
	Status SecurityGroupRuleStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// SecurityGroupRuleList contains a list of SecurityGroupRules
type SecurityGroupRuleList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []SecurityGroupRule `json:"items"`
}

// Repository type metadata.
var (
	SecurityGroupRule_Kind             = "SecurityGroupRule"
	SecurityGroupRule_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: SecurityGroupRule_Kind}.String()
	SecurityGroupRule_KindAPIVersion   = SecurityGroupRule_Kind + "." + CRDGroupVersion.String()
	SecurityGroupRule_GroupVersionKind = CRDGroupVersion.WithKind(SecurityGroupRule_Kind)
)

func init() {
	SchemeBuilder.Register(&SecurityGroupRule{}, &SecurityGroupRuleList{})
}
