---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.13.0
  name: images.disk.vkcs.upbound.io
spec:
  group: disk.vkcs.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - vkcs
    kind: Image
    listKind: ImageList
    plural: images
    singular: image
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Image is the Schema for the Images API. Manages an Image resource
          within VKCS.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ImageSpec defines the desired state of Image
            properties:
              deletionPolicy:
                default: Delete
                description: 'DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource. This field is planned to be deprecated
                  in favor of the ManagementPolicies field in a future release. Currently,
                  both could be set independently and non-default values would be
                  honored if the feature flag is enabled. See the design doc for more
                  information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223'
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  archivingFormat:
                    description: optional string →  The format of archived image file.
                      Use this to unzip image file when downloading an archive. Currently
                      only "tar" format is supported.New since v0.4.2. The format
                      of archived image file. Use this to unzip image file when downloading
                      an archive. Currently only "tar" format is supported._new_since_v0.4.2_.
                    type: string
                  compressionFormat:
                    description: Type header will be used to detect compression format.New
                      since v0.4.2. The format of compressed image. Use this attribute
                      to decompress image when downloading it from source. Must be
                      one of "auto", "bzip2", "gzip", "xz". If set to "auto", response
                      Content-Type header will be used to detect compression format._new_since_v0.4.2_.
                    type: string
                  containerFormat:
                    description: required string →  The container format. Must be
                      one of "bare". The container format. Must be one of "bare".
                    type: string
                  diskFormat:
                    description: required string →  The disk format. Must be one of
                      "raw", "iso". The disk format. Must be one of "raw", "iso".
                    type: string
                  imageCachePath:
                    description: optional string →  This is the directory where the
                      images will be downloaded. Images will be stored with a filename
                      corresponding to the url's md5 hash. Defaults to "$HOME/. Images
                      will be stored with a filename corresponding to the url's md5
                      hash. Defaults to "$HOME/
                    type: string
                  imageSourcePasswordSecretRef:
                    description: optional sensitive string →  The password of basic
                      auth to download image_source_url. The password of basic auth
                      to download `image_source_url`.
                    properties:
                      key:
                        description: The key to select.
                        type: string
                      name:
                        description: Name of the secret.
                        type: string
                      namespace:
                        description: Namespace of the secret.
                        type: string
                    required:
                    - key
                    - name
                    - namespace
                    type: object
                  imageSourceUrl:
                    description: optional string →  This is the url of the raw image.
                      The image will be downloaded in the image_cache_path before
                      being uploaded to VKCS. Conflicts with local_file_path. This
                      is the url of the raw image. The image will be downloaded in
                      the `image_cache_path` before being uploaded to VKCS. Conflicts
                      with `local_file_path`.
                    type: string
                  imageSourceUsername:
                    description: optional string →  The username of basic auth to
                      download image_source_url. The username of basic auth to download
                      `image_source_url`.
                    type: string
                  localFilePath:
                    description: optional string →  This is the filepath of the raw
                      image file that will be uploaded to VKCS. Conflicts with image_source_url
                      This is the filepath of the raw image file that will be uploaded
                      to VKCS. Conflicts with `image_source_url`
                    type: string
                  minDiskGb:
                    description: optional number →  Amount of disk space (in GB) required
                      to boot VM. Defaults to 0. Amount of disk space (in GB) required
                      to boot VM. Defaults to 0.
                    type: number
                  minRamMb:
                    description: optional number →  Amount of ram (in MB) required
                      to boot VM. Defauts to 0. Amount of ram (in MB) required to
                      boot VM. Defauts to 0.
                    type: number
                  name:
                    description: required string →  The name of the image. The name
                      of the image.
                    type: string
                  properties:
                    additionalProperties:
                      type: string
                    description: optional map of string →  A map of key/value pairs
                      to set freeform information about an image. See the "Notes"
                      section for further information about properties. A map of key/value
                      pairs to set freeform information about an image. See the "Notes"
                      section for further information about properties.
                    type: object
                  protected:
                    description: optional boolean →  If true, image will not be deletable.
                      Defaults to false. If true, image will not be deletable. Defaults
                      to false.
                    type: boolean
                  region:
                    description: optional string →  The region in which to obtain
                      the Image client. An Image client is needed to create an Image
                      that can be used with a compute instance. If omitted, the region
                      argument of the provider is used. Changing this creates a new
                      Image. The region in which to obtain the Image client. An Image
                      client is needed to create an Image that can be used with a
                      compute instance. If omitted, the `region` argument of the provider
                      is used. Changing this creates a new Image.
                    type: string
                  tags:
                    description: optional set of string →  The tags of the image.
                      It must be a list of strings. At this time, it is not possible
                      to delete all tags of an image. The tags of the image. It must
                      be a list of strings. At this time, it is not possible to delete
                      all tags of an image.
                    items:
                      type: string
                    type: array
                  verifyChecksum:
                    description: optional boolean →  If false, the checksum will not
                      be verified once the image is finished uploading. If false,
                      the checksum will not be verified once the image is finished
                      uploading.
                    type: boolean
                  visibility:
                    description: optional string →  The visibility of the image. Must
                      be one of "private", "community", or "shared". The ability to
                      set the visibility depends upon the configuration of the VKCS
                      cloud. The visibility of the image. Must be one of "private",
                      "community", or "shared". The ability to set the visibility
                      depends upon the configuration of the VKCS cloud.
                    type: string
                type: object
              initProvider:
                description: THIS IS A BETA FIELD. It will be honored unless the Management
                  Policies feature flag is disabled. InitProvider holds the same fields
                  as ForProvider, with the exception of Identifier and other resource
                  reference fields. The fields that are in InitProvider are merged
                  into ForProvider when the resource is created. The same fields are
                  also added to the terraform ignore_changes hook, to avoid updating
                  them after creation. This is useful for fields that are required
                  on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them,
                  like an autoscaler.
                properties:
                  archivingFormat:
                    description: optional string →  The format of archived image file.
                      Use this to unzip image file when downloading an archive. Currently
                      only "tar" format is supported.New since v0.4.2. The format
                      of archived image file. Use this to unzip image file when downloading
                      an archive. Currently only "tar" format is supported._new_since_v0.4.2_.
                    type: string
                  compressionFormat:
                    description: Type header will be used to detect compression format.New
                      since v0.4.2. The format of compressed image. Use this attribute
                      to decompress image when downloading it from source. Must be
                      one of "auto", "bzip2", "gzip", "xz". If set to "auto", response
                      Content-Type header will be used to detect compression format._new_since_v0.4.2_.
                    type: string
                  containerFormat:
                    description: required string →  The container format. Must be
                      one of "bare". The container format. Must be one of "bare".
                    type: string
                  diskFormat:
                    description: required string →  The disk format. Must be one of
                      "raw", "iso". The disk format. Must be one of "raw", "iso".
                    type: string
                  imageCachePath:
                    description: optional string →  This is the directory where the
                      images will be downloaded. Images will be stored with a filename
                      corresponding to the url's md5 hash. Defaults to "$HOME/. Images
                      will be stored with a filename corresponding to the url's md5
                      hash. Defaults to "$HOME/
                    type: string
                  imageSourceUrl:
                    description: optional string →  This is the url of the raw image.
                      The image will be downloaded in the image_cache_path before
                      being uploaded to VKCS. Conflicts with local_file_path. This
                      is the url of the raw image. The image will be downloaded in
                      the `image_cache_path` before being uploaded to VKCS. Conflicts
                      with `local_file_path`.
                    type: string
                  imageSourceUsername:
                    description: optional string →  The username of basic auth to
                      download image_source_url. The username of basic auth to download
                      `image_source_url`.
                    type: string
                  localFilePath:
                    description: optional string →  This is the filepath of the raw
                      image file that will be uploaded to VKCS. Conflicts with image_source_url
                      This is the filepath of the raw image file that will be uploaded
                      to VKCS. Conflicts with `image_source_url`
                    type: string
                  minDiskGb:
                    description: optional number →  Amount of disk space (in GB) required
                      to boot VM. Defaults to 0. Amount of disk space (in GB) required
                      to boot VM. Defaults to 0.
                    type: number
                  minRamMb:
                    description: optional number →  Amount of ram (in MB) required
                      to boot VM. Defauts to 0. Amount of ram (in MB) required to
                      boot VM. Defauts to 0.
                    type: number
                  name:
                    description: required string →  The name of the image. The name
                      of the image.
                    type: string
                  properties:
                    additionalProperties:
                      type: string
                    description: optional map of string →  A map of key/value pairs
                      to set freeform information about an image. See the "Notes"
                      section for further information about properties. A map of key/value
                      pairs to set freeform information about an image. See the "Notes"
                      section for further information about properties.
                    type: object
                  protected:
                    description: optional boolean →  If true, image will not be deletable.
                      Defaults to false. If true, image will not be deletable. Defaults
                      to false.
                    type: boolean
                  region:
                    description: optional string →  The region in which to obtain
                      the Image client. An Image client is needed to create an Image
                      that can be used with a compute instance. If omitted, the region
                      argument of the provider is used. Changing this creates a new
                      Image. The region in which to obtain the Image client. An Image
                      client is needed to create an Image that can be used with a
                      compute instance. If omitted, the `region` argument of the provider
                      is used. Changing this creates a new Image.
                    type: string
                  tags:
                    description: optional set of string →  The tags of the image.
                      It must be a list of strings. At this time, it is not possible
                      to delete all tags of an image. The tags of the image. It must
                      be a list of strings. At this time, it is not possible to delete
                      all tags of an image.
                    items:
                      type: string
                    type: array
                  verifyChecksum:
                    description: optional boolean →  If false, the checksum will not
                      be verified once the image is finished uploading. If false,
                      the checksum will not be verified once the image is finished
                      uploading.
                    type: boolean
                  visibility:
                    description: optional string →  The visibility of the image. Must
                      be one of "private", "community", or "shared". The ability to
                      set the visibility depends upon the configuration of the VKCS
                      cloud. The visibility of the image. Must be one of "private",
                      "community", or "shared". The ability to set the visibility
                      depends upon the configuration of the VKCS cloud.
                    type: string
                type: object
              managementPolicies:
                default:
                - '*'
                description: 'THIS IS A BETA FIELD. It is on by default but can be
                  opted out through a Crossplane feature flag. ManagementPolicies
                  specify the array of actions Crossplane is allowed to take on the
                  managed and external resources. This field is planned to replace
                  the DeletionPolicy field in a future release. Currently, both could
                  be set independently and non-default values would be honored if
                  the feature flag is enabled. If both are custom, the DeletionPolicy
                  field will be ignored. See the design doc for more information:
                  https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md'
                items:
                  description: A ManagementAction represents an action that the Crossplane
                    controllers can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
            x-kubernetes-validations:
            - message: spec.forProvider.containerFormat is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.containerFormat)
                || (has(self.initProvider) && has(self.initProvider.containerFormat))'
            - message: spec.forProvider.diskFormat is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.diskFormat)
                || (has(self.initProvider) && has(self.initProvider.diskFormat))'
            - message: spec.forProvider.name is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.name)
                || (has(self.initProvider) && has(self.initProvider.name))'
          status:
            description: ImageStatus defines the observed state of Image.
            properties:
              atProvider:
                properties:
                  archivingFormat:
                    description: optional string →  The format of archived image file.
                      Use this to unzip image file when downloading an archive. Currently
                      only "tar" format is supported.New since v0.4.2. The format
                      of archived image file. Use this to unzip image file when downloading
                      an archive. Currently only "tar" format is supported._new_since_v0.4.2_.
                    type: string
                  checksum:
                    description: string →  The checksum of the data associated with
                      the image. The checksum of the data associated with the image.
                    type: string
                  compressionFormat:
                    description: Type header will be used to detect compression format.New
                      since v0.4.2. The format of compressed image. Use this attribute
                      to decompress image when downloading it from source. Must be
                      one of "auto", "bzip2", "gzip", "xz". If set to "auto", response
                      Content-Type header will be used to detect compression format._new_since_v0.4.2_.
                    type: string
                  containerFormat:
                    description: required string →  The container format. Must be
                      one of "bare". The container format. Must be one of "bare".
                    type: string
                  createdAt:
                    description: string →  The date the image was created. The date
                      the image was created.
                    type: string
                  diskFormat:
                    description: required string →  The disk format. Must be one of
                      "raw", "iso". The disk format. Must be one of "raw", "iso".
                    type: string
                  file:
                    description: string →  The trailing path after the image endpoint
                      that represent the location of the image or the path to retrieve
                      it. The trailing path after the image endpoint that represent
                      the location of the image or the path to retrieve it.
                    type: string
                  id:
                    description: string →  ID of the resource.
                    type: string
                  imageCachePath:
                    description: optional string →  This is the directory where the
                      images will be downloaded. Images will be stored with a filename
                      corresponding to the url's md5 hash. Defaults to "$HOME/. Images
                      will be stored with a filename corresponding to the url's md5
                      hash. Defaults to "$HOME/
                    type: string
                  imageSourceUrl:
                    description: optional string →  This is the url of the raw image.
                      The image will be downloaded in the image_cache_path before
                      being uploaded to VKCS. Conflicts with local_file_path. This
                      is the url of the raw image. The image will be downloaded in
                      the `image_cache_path` before being uploaded to VKCS. Conflicts
                      with `local_file_path`.
                    type: string
                  imageSourceUsername:
                    description: optional string →  The username of basic auth to
                      download image_source_url. The username of basic auth to download
                      `image_source_url`.
                    type: string
                  localFilePath:
                    description: optional string →  This is the filepath of the raw
                      image file that will be uploaded to VKCS. Conflicts with image_source_url
                      This is the filepath of the raw image file that will be uploaded
                      to VKCS. Conflicts with `image_source_url`
                    type: string
                  metadata:
                    additionalProperties:
                      type: string
                    description: concepts.html. The metadata associated with the image.
                      Image metadata allow for meaningfully define the image properties
                      and tags. See https://docs.openstack.org/glance/latest/user/metadefs-concepts.html.
                    type: object
                  minDiskGb:
                    description: optional number →  Amount of disk space (in GB) required
                      to boot VM. Defaults to 0. Amount of disk space (in GB) required
                      to boot VM. Defaults to 0.
                    type: number
                  minRamMb:
                    description: optional number →  Amount of ram (in MB) required
                      to boot VM. Defauts to 0. Amount of ram (in MB) required to
                      boot VM. Defauts to 0.
                    type: number
                  name:
                    description: required string →  The name of the image. The name
                      of the image.
                    type: string
                  owner:
                    description: string →  The id of the vkcs user who owns the image.
                      The id of the vkcs user who owns the image.
                    type: string
                  properties:
                    additionalProperties:
                      type: string
                    description: optional map of string →  A map of key/value pairs
                      to set freeform information about an image. See the "Notes"
                      section for further information about properties. A map of key/value
                      pairs to set freeform information about an image. See the "Notes"
                      section for further information about properties.
                    type: object
                  protected:
                    description: optional boolean →  If true, image will not be deletable.
                      Defaults to false. If true, image will not be deletable. Defaults
                      to false.
                    type: boolean
                  region:
                    description: optional string →  The region in which to obtain
                      the Image client. An Image client is needed to create an Image
                      that can be used with a compute instance. If omitted, the region
                      argument of the provider is used. Changing this creates a new
                      Image. The region in which to obtain the Image client. An Image
                      client is needed to create an Image that can be used with a
                      compute instance. If omitted, the `region` argument of the provider
                      is used. Changing this creates a new Image.
                    type: string
                  schema:
                    description: schema that represent the image or image The path
                      to the JSON-schema that represent the image or image
                    type: string
                  sizeBytes:
                    description: number →  The size in bytes of the data associated
                      with the image. The size in bytes of the data associated with
                      the image.
                    type: number
                  status:
                    description: string →  The status of the image. It can be "queued",
                      "active" or "saving". The status of the image. It can be "queued",
                      "active" or "saving".
                    type: string
                  tags:
                    description: optional set of string →  The tags of the image.
                      It must be a list of strings. At this time, it is not possible
                      to delete all tags of an image. The tags of the image. It must
                      be a list of strings. At this time, it is not possible to delete
                      all tags of an image.
                    items:
                      type: string
                    type: array
                  updatedAt:
                    description: string →  The date the image was last updated. The
                      date the image was last updated.
                    type: string
                  verifyChecksum:
                    description: optional boolean →  If false, the checksum will not
                      be verified once the image is finished uploading. If false,
                      the checksum will not be verified once the image is finished
                      uploading.
                    type: boolean
                  visibility:
                    description: optional string →  The visibility of the image. Must
                      be one of "private", "community", or "shared". The ability to
                      set the visibility depends upon the configuration of the VKCS
                      cloud. The visibility of the image. Must be one of "private",
                      "community", or "shared". The ability to set the visibility
                      depends upon the configuration of the VKCS cloud.
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
