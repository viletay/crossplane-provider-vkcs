---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.13.0
  name: clusters.kubernetes.vkcs.upbound.io
spec:
  group: kubernetes.vkcs.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - vkcs
    kind: Cluster
    listKind: ClusterList
    plural: clusters
    singular: cluster
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Cluster is the Schema for the Clusters API. Manages a kubernetes
          cluster.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ClusterSpec defines the desired state of Cluster
            properties:
              deletionPolicy:
                default: Delete
                description: 'DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource. This field is planned to be deprecated
                  in favor of the ManagementPolicies field in a future release. Currently,
                  both could be set independently and non-default values would be
                  honored if the feature flag is enabled. See the design doc for more
                  information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223'
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  apiLbFip:
                    description: optional string →  API LoadBalancer fip. IP address
                      field. API LoadBalancer fip. IP address field.
                    type: string
                  apiLbVip:
                    description: optional string →  API LoadBalancer vip. IP address
                      field. API LoadBalancer vip. IP address field.
                    type: string
                  availabilityZone:
                    description: required string →  Availability zone of the cluster.
                      Availability zone of the cluster.
                    type: string
                  clusterTemplateId:
                    description: required string →  The UUID of the Kubernetes cluster
                      template. It can be obtained using the cluster_template data
                      source. The UUID of the Kubernetes cluster template. It can
                      be obtained using the cluster_template data source.
                    type: string
                  dnsDomain:
                    description: optional string →  Custom DNS cluster domain. Changing
                      this creates a new cluster. Custom DNS cluster domain. Changing
                      this creates a new cluster.
                    type: string
                  floatingIpEnabled:
                    description: required boolean →  Floating ip is enabled. Floating
                      ip is enabled.
                    type: boolean
                  ingressFloatingIp:
                    description: optional string →  Floating IP created for ingress
                      service. Floating IP created for ingress service.
                    type: string
                  insecureRegistries:
                    description: optional string →  Addresses of registries from which
                      you can download images without checking certificates. Changing
                      this creates a new cluster. Addresses of registries from which
                      you can download images without checking certificates. Changing
                      this creates a new cluster.
                    items:
                      type: string
                    type: array
                  keypair:
                    description: optional string →  The name of the Compute service
                      SSH keypair. Changing this creates a new cluster. The name of
                      the Compute service SSH keypair. Changing this creates a new
                      cluster.
                    type: string
                  labels:
                    additionalProperties:
                      type: string
                    description: "optional map of string →  The list of optional key
                      value pairs representing additional properties of the cluster.
                      Note: Updating this attribute will not immediately apply the
                      changes; these options will be used when recreating or deleting
                      cluster nodes, for example, during an upgrade operation. The
                      list of optional key value pairs representing additional properties
                      of the cluster. _note_ Updating this attribute will not immediately
                      apply the changes; these options will be used when recreating
                      or deleting cluster nodes, for example, during an upgrade operation.
                      \n * `calico_ipv4pool` to set subnet where pods will be created.
                      Default 10.100.0.0/16. _note_ Updating this value while the
                      cluster is running is dangerous because it can lead to loss
                      of connectivity of the cluster nodes. * `clean_volumes` to remove
                      pvc volumes when deleting a cluster. Default False. _note_ Changes
                      to this value will be applied immediately. * `cloud_monitoring`
                      to enable cloud monitoring feature. Default False. * `etcd_volume_size`
                      to set etcd volume size in GB. Default 10. * `kube_log_level`
                      to set log level for kubelet in range 0 to 8. Default 0. * `master_volume_size`
                      to set master vm volume size in GB. Default 50. * `cluster_node_volume_type`
                      to set master vm volume type. Default ceph-hdd."
                    type: object
                  loadbalancerSubnetId:
                    description: optional string →  The UUID of the load balancer's
                      subnet. Changing this creates new cluster. The UUID of the load
                      balancer's subnet. Changing this creates new cluster.
                    type: string
                  loadbalancerSubnetIdRef:
                    description: Reference to a Subnet in network to populate loadbalancerSubnetId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  loadbalancerSubnetIdSelector:
                    description: Selector for a Subnet in network to populate loadbalancerSubnetId.
                    properties:
                      matchControllerRef:
                        description: MatchControllerRef ensures an object with the
                          same controller reference as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  masterCount:
                    description: optional number →  The number of master nodes for
                      the cluster. Changing this creates a new cluster. The number
                      of master nodes for the cluster. Changing this creates a new
                      cluster.
                    type: number
                  masterFlavor:
                    description: optional string →  The UUID of a flavor for the master
                      nodes. If master_flavor is not present, value from cluster_template
                      will be used. The UUID of a flavor for the master nodes. If
                      master_flavor is not present, value from cluster_template will
                      be used.
                    type: string
                  name:
                    description: zA-Z][a-zA-Z0-9_.-]*$. The name of the cluster. Changing
                      this creates a new cluster. Should match the pattern `^[a-zA-Z][a-zA-Z0-9_.-]*$`.
                    type: string
                  networkId:
                    description: required string →  UUID of the cluster's network.
                      UUID of the cluster's network.
                    type: string
                  networkIdRef:
                    description: Reference to a Network in network to populate networkId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  networkIdSelector:
                    description: Selector for a Network in network to populate networkId.
                    properties:
                      matchControllerRef:
                        description: MatchControllerRef ensures an object with the
                          same controller reference as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  podsNetworkCidr:
                    description: optional string →  Network cidr of k8s virtual network
                      Network cidr of k8s virtual network
                    type: string
                  region:
                    description: optional string →  Region to use for the cluster.
                      Default is a region configured for provider. Region to use for
                      the cluster. Default is a region configured for provider.
                    type: string
                  registryAuthPassword:
                    description: optional string →  Docker registry access password.
                      Docker registry access password.
                    type: string
                  status:
                    description: optional string →  Current state of a cluster. Changing
                      this to RUNNING or SHUTOFF will turn cluster on/off. Current
                      state of a cluster. Changing this to `RUNNING` or `SHUTOFF`
                      will turn cluster on/off.
                    type: string
                  subnetId:
                    description: required string →  UUID of the cluster's subnet.
                      UUID of the cluster's subnet.
                    type: string
                  subnetIdRef:
                    description: Reference to a Subnet in network to populate subnetId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  subnetIdSelector:
                    description: Selector for a Subnet in network to populate subnetId.
                    properties:
                      matchControllerRef:
                        description: MatchControllerRef ensures an object with the
                          same controller reference as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  syncSecurityPolicy:
                    description: optional boolean →  Enables syncing of security policies
                      of cluster. Default value is false.New since v0.7.0. Enables
                      syncing of security policies of cluster. Default value is false._new_since_v0.7.0_.
                    type: boolean
                type: object
              initProvider:
                description: THIS IS A BETA FIELD. It will be honored unless the Management
                  Policies feature flag is disabled. InitProvider holds the same fields
                  as ForProvider, with the exception of Identifier and other resource
                  reference fields. The fields that are in InitProvider are merged
                  into ForProvider when the resource is created. The same fields are
                  also added to the terraform ignore_changes hook, to avoid updating
                  them after creation. This is useful for fields that are required
                  on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them,
                  like an autoscaler.
                properties:
                  apiLbFip:
                    description: optional string →  API LoadBalancer fip. IP address
                      field. API LoadBalancer fip. IP address field.
                    type: string
                  apiLbVip:
                    description: optional string →  API LoadBalancer vip. IP address
                      field. API LoadBalancer vip. IP address field.
                    type: string
                  availabilityZone:
                    description: required string →  Availability zone of the cluster.
                      Availability zone of the cluster.
                    type: string
                  clusterTemplateId:
                    description: required string →  The UUID of the Kubernetes cluster
                      template. It can be obtained using the cluster_template data
                      source. The UUID of the Kubernetes cluster template. It can
                      be obtained using the cluster_template data source.
                    type: string
                  dnsDomain:
                    description: optional string →  Custom DNS cluster domain. Changing
                      this creates a new cluster. Custom DNS cluster domain. Changing
                      this creates a new cluster.
                    type: string
                  floatingIpEnabled:
                    description: required boolean →  Floating ip is enabled. Floating
                      ip is enabled.
                    type: boolean
                  ingressFloatingIp:
                    description: optional string →  Floating IP created for ingress
                      service. Floating IP created for ingress service.
                    type: string
                  insecureRegistries:
                    description: optional string →  Addresses of registries from which
                      you can download images without checking certificates. Changing
                      this creates a new cluster. Addresses of registries from which
                      you can download images without checking certificates. Changing
                      this creates a new cluster.
                    items:
                      type: string
                    type: array
                  keypair:
                    description: optional string →  The name of the Compute service
                      SSH keypair. Changing this creates a new cluster. The name of
                      the Compute service SSH keypair. Changing this creates a new
                      cluster.
                    type: string
                  labels:
                    additionalProperties:
                      type: string
                    description: "optional map of string →  The list of optional key
                      value pairs representing additional properties of the cluster.
                      Note: Updating this attribute will not immediately apply the
                      changes; these options will be used when recreating or deleting
                      cluster nodes, for example, during an upgrade operation. The
                      list of optional key value pairs representing additional properties
                      of the cluster. _note_ Updating this attribute will not immediately
                      apply the changes; these options will be used when recreating
                      or deleting cluster nodes, for example, during an upgrade operation.
                      \n * `calico_ipv4pool` to set subnet where pods will be created.
                      Default 10.100.0.0/16. _note_ Updating this value while the
                      cluster is running is dangerous because it can lead to loss
                      of connectivity of the cluster nodes. * `clean_volumes` to remove
                      pvc volumes when deleting a cluster. Default False. _note_ Changes
                      to this value will be applied immediately. * `cloud_monitoring`
                      to enable cloud monitoring feature. Default False. * `etcd_volume_size`
                      to set etcd volume size in GB. Default 10. * `kube_log_level`
                      to set log level for kubelet in range 0 to 8. Default 0. * `master_volume_size`
                      to set master vm volume size in GB. Default 50. * `cluster_node_volume_type`
                      to set master vm volume type. Default ceph-hdd."
                    type: object
                  masterCount:
                    description: optional number →  The number of master nodes for
                      the cluster. Changing this creates a new cluster. The number
                      of master nodes for the cluster. Changing this creates a new
                      cluster.
                    type: number
                  masterFlavor:
                    description: optional string →  The UUID of a flavor for the master
                      nodes. If master_flavor is not present, value from cluster_template
                      will be used. The UUID of a flavor for the master nodes. If
                      master_flavor is not present, value from cluster_template will
                      be used.
                    type: string
                  name:
                    description: zA-Z][a-zA-Z0-9_.-]*$. The name of the cluster. Changing
                      this creates a new cluster. Should match the pattern `^[a-zA-Z][a-zA-Z0-9_.-]*$`.
                    type: string
                  podsNetworkCidr:
                    description: optional string →  Network cidr of k8s virtual network
                      Network cidr of k8s virtual network
                    type: string
                  region:
                    description: optional string →  Region to use for the cluster.
                      Default is a region configured for provider. Region to use for
                      the cluster. Default is a region configured for provider.
                    type: string
                  registryAuthPassword:
                    description: optional string →  Docker registry access password.
                      Docker registry access password.
                    type: string
                  status:
                    description: optional string →  Current state of a cluster. Changing
                      this to RUNNING or SHUTOFF will turn cluster on/off. Current
                      state of a cluster. Changing this to `RUNNING` or `SHUTOFF`
                      will turn cluster on/off.
                    type: string
                  syncSecurityPolicy:
                    description: optional boolean →  Enables syncing of security policies
                      of cluster. Default value is false.New since v0.7.0. Enables
                      syncing of security policies of cluster. Default value is false._new_since_v0.7.0_.
                    type: boolean
                type: object
              managementPolicies:
                default:
                - '*'
                description: 'THIS IS A BETA FIELD. It is on by default but can be
                  opted out through a Crossplane feature flag. ManagementPolicies
                  specify the array of actions Crossplane is allowed to take on the
                  managed and external resources. This field is planned to replace
                  the DeletionPolicy field in a future release. Currently, both could
                  be set independently and non-default values would be honored if
                  the feature flag is enabled. If both are custom, the DeletionPolicy
                  field will be ignored. See the design doc for more information:
                  https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md'
                items:
                  description: A ManagementAction represents an action that the Crossplane
                    controllers can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
            x-kubernetes-validations:
            - message: spec.forProvider.availabilityZone is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.availabilityZone)
                || (has(self.initProvider) && has(self.initProvider.availabilityZone))'
            - message: spec.forProvider.clusterTemplateId is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.clusterTemplateId)
                || (has(self.initProvider) && has(self.initProvider.clusterTemplateId))'
            - message: spec.forProvider.floatingIpEnabled is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.floatingIpEnabled)
                || (has(self.initProvider) && has(self.initProvider.floatingIpEnabled))'
            - message: spec.forProvider.name is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.name)
                || (has(self.initProvider) && has(self.initProvider.name))'
          status:
            description: ClusterStatus defines the observed state of Cluster.
            properties:
              atProvider:
                properties:
                  allLabels:
                    additionalProperties:
                      type: string
                    description: only map of all cluster labels.New since v0.5.1.
                      The read-only map of all cluster labels._new_since_v0.5.1_.
                    type: object
                  apiAddress:
                    description: string →  COE API address. COE API address.
                    type: string
                  apiLbFip:
                    description: optional string →  API LoadBalancer fip. IP address
                      field. API LoadBalancer fip. IP address field.
                    type: string
                  apiLbVip:
                    description: optional string →  API LoadBalancer vip. IP address
                      field. API LoadBalancer vip. IP address field.
                    type: string
                  availabilityZone:
                    description: required string →  Availability zone of the cluster.
                      Availability zone of the cluster.
                    type: string
                  clusterTemplateId:
                    description: required string →  The UUID of the Kubernetes cluster
                      template. It can be obtained using the cluster_template data
                      source. The UUID of the Kubernetes cluster template. It can
                      be obtained using the cluster_template data source.
                    type: string
                  createdAt:
                    description: string →  The time at which cluster was created.
                      The time at which cluster was created.
                    type: string
                  dnsDomain:
                    description: optional string →  Custom DNS cluster domain. Changing
                      this creates a new cluster. Custom DNS cluster domain. Changing
                      this creates a new cluster.
                    type: string
                  floatingIpEnabled:
                    description: required boolean →  Floating ip is enabled. Floating
                      ip is enabled.
                    type: boolean
                  id:
                    description: string →  ID of the resource.
                    type: string
                  ingressFloatingIp:
                    description: optional string →  Floating IP created for ingress
                      service. Floating IP created for ingress service.
                    type: string
                  insecureRegistries:
                    description: optional string →  Addresses of registries from which
                      you can download images without checking certificates. Changing
                      this creates a new cluster. Addresses of registries from which
                      you can download images without checking certificates. Changing
                      this creates a new cluster.
                    items:
                      type: string
                    type: array
                  keypair:
                    description: optional string →  The name of the Compute service
                      SSH keypair. Changing this creates a new cluster. The name of
                      the Compute service SSH keypair. Changing this creates a new
                      cluster.
                    type: string
                  labels:
                    additionalProperties:
                      type: string
                    description: "optional map of string →  The list of optional key
                      value pairs representing additional properties of the cluster.
                      Note: Updating this attribute will not immediately apply the
                      changes; these options will be used when recreating or deleting
                      cluster nodes, for example, during an upgrade operation. The
                      list of optional key value pairs representing additional properties
                      of the cluster. _note_ Updating this attribute will not immediately
                      apply the changes; these options will be used when recreating
                      or deleting cluster nodes, for example, during an upgrade operation.
                      \n * `calico_ipv4pool` to set subnet where pods will be created.
                      Default 10.100.0.0/16. _note_ Updating this value while the
                      cluster is running is dangerous because it can lead to loss
                      of connectivity of the cluster nodes. * `clean_volumes` to remove
                      pvc volumes when deleting a cluster. Default False. _note_ Changes
                      to this value will be applied immediately. * `cloud_monitoring`
                      to enable cloud monitoring feature. Default False. * `etcd_volume_size`
                      to set etcd volume size in GB. Default 10. * `kube_log_level`
                      to set log level for kubelet in range 0 to 8. Default 0. * `master_volume_size`
                      to set master vm volume size in GB. Default 50. * `cluster_node_volume_type`
                      to set master vm volume type. Default ceph-hdd."
                    type: object
                  loadbalancerSubnetId:
                    description: optional string →  The UUID of the load balancer's
                      subnet. Changing this creates new cluster. The UUID of the load
                      balancer's subnet. Changing this creates new cluster.
                    type: string
                  masterAddresses:
                    description: string →  IP addresses of the master node of the
                      cluster. IP addresses of the master node of the cluster.
                    items:
                      type: string
                    type: array
                  masterCount:
                    description: optional number →  The number of master nodes for
                      the cluster. Changing this creates a new cluster. The number
                      of master nodes for the cluster. Changing this creates a new
                      cluster.
                    type: number
                  masterFlavor:
                    description: optional string →  The UUID of a flavor for the master
                      nodes. If master_flavor is not present, value from cluster_template
                      will be used. The UUID of a flavor for the master nodes. If
                      master_flavor is not present, value from cluster_template will
                      be used.
                    type: string
                  name:
                    description: zA-Z][a-zA-Z0-9_.-]*$. The name of the cluster. Changing
                      this creates a new cluster. Should match the pattern `^[a-zA-Z][a-zA-Z0-9_.-]*$`.
                    type: string
                  networkId:
                    description: required string →  UUID of the cluster's network.
                      UUID of the cluster's network.
                    type: string
                  podsNetworkCidr:
                    description: optional string →  Network cidr of k8s virtual network
                      Network cidr of k8s virtual network
                    type: string
                  projectId:
                    description: string →  The project of the cluster. The project
                      of the cluster.
                    type: string
                  region:
                    description: optional string →  Region to use for the cluster.
                      Default is a region configured for provider. Region to use for
                      the cluster. Default is a region configured for provider.
                    type: string
                  registryAuthPassword:
                    description: optional string →  Docker registry access password.
                      Docker registry access password.
                    type: string
                  stackId:
                    description: string →  UUID of the Orchestration service stack.
                      UUID of the Orchestration service stack.
                    type: string
                  status:
                    description: optional string →  Current state of a cluster. Changing
                      this to RUNNING or SHUTOFF will turn cluster on/off. Current
                      state of a cluster. Changing this to `RUNNING` or `SHUTOFF`
                      will turn cluster on/off.
                    type: string
                  subnetId:
                    description: required string →  UUID of the cluster's subnet.
                      UUID of the cluster's subnet.
                    type: string
                  syncSecurityPolicy:
                    description: optional boolean →  Enables syncing of security policies
                      of cluster. Default value is false.New since v0.7.0. Enables
                      syncing of security policies of cluster. Default value is false._new_since_v0.7.0_.
                    type: boolean
                  updatedAt:
                    description: string →  The time at which cluster was created.
                      The time at which cluster was created.
                    type: string
                  userId:
                    description: string →  The user of the cluster. The user of the
                      cluster.
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
