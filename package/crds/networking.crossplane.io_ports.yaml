---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.13.0
  name: ports.networking.crossplane.io
spec:
  group: networking.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - vkcs
    kind: Port
    listKind: PortList
    plural: ports
    singular: port
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Port is the Schema for the Ports API. Manages a port resource
          within VKCS.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: PortSpec defines the desired state of Port
            properties:
              deletionPolicy:
                default: Delete
                description: 'DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource. This field is planned to be deprecated
                  in favor of the ManagementPolicies field in a future release. Currently,
                  both could be set independently and non-default values would be
                  honored if the feature flag is enabled. See the design doc for more
                  information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223'
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  adminStateUp:
                    description: optional boolean →  Administrative up/down status
                      for the port (must be true or false if provided). Changing this
                      updates the admin_state_up of an existing port. Administrative
                      up/down status for the port (must be `true` or `false` if provided).
                      Changing this updates the `admin_state_up` of an existing port.
                    type: boolean
                  allowedAddressPairs:
                    description: optional →  An IP/MAC Address pair of additional
                      IP addresses that can be active on this port. The structure
                      is described below. An IP/MAC Address pair of additional IP
                      addresses that can be active on this port. The structure is
                      described below.
                    items:
                      properties:
                        ipAddress:
                          description: required string →  The additional IP address.
                            The additional IP address.
                          type: string
                        macAddress:
                          description: optional string →  The additional MAC address.
                            The additional MAC address.
                          type: string
                      type: object
                    type: array
                  description:
                    description: readable description of the port. Changing this updates
                      the description of an existing port. Human-readable description
                      of the port. Changing this updates the `description` of an existing
                      port.
                    type: string
                  deviceId:
                    description: optional string →  The ID of the device attached
                      to the port. Changing this creates a new port. The ID of the
                      device attached to the port. Changing this creates a new port.
                    type: string
                  deviceOwner:
                    description: optional string →  The device owner of the port.
                      Changing this creates a new port. The device owner of the port.
                      Changing this creates a new port.
                    type: string
                  dnsName:
                    description: optional string →  The port DNS name. The port DNS
                      name.
                    type: string
                  extraDhcpOption:
                    description: optional →  An extra DHCP option that needs to be
                      configured on the port. The structure is described below. Can
                      be specified multiple times. An extra DHCP option that needs
                      to be configured on the port. The structure is described below.
                      Can be specified multiple times.
                    items:
                      properties:
                        name:
                          description: required string →  Name of the DHCP option.
                            Name of the DHCP option.
                          type: string
                        value:
                          description: required string →  Value of the DHCP option.
                            Value of the DHCP option.
                          type: string
                      type: object
                    type: array
                  fixedIp:
                    description: optional →  (Conflicts with no_fixed_ip) An array
                      of desired IPs for this port. The structure is described below.
                      (Conflicts with `no_fixed_ip`) An array of desired IPs for this
                      port. The structure is described below.
                    items:
                      properties:
                        ipAddress:
                          description: required string →  The additional IP address.
                            IP address desired in the subnet for this port. If you
                            don't specify `ip_address`, an available IP address from
                            the specified subnet will be allocated to this port. This
                            field will not be populated if it is left blank or omitted.
                            To retrieve the assigned IP address, use the `all_fixed_ips`
                            attribute.
                          type: string
                        subnetId:
                          description: required string →  Subnet in which to allocate
                            IP address for this port. Subnet in which to allocate
                            IP address for this port.
                          type: string
                        subnetIdRef:
                          description: Reference to a Subnet to populate subnetId.
                          properties:
                            name:
                              description: Name of the referenced object.
                              type: string
                            policy:
                              description: Policies for referencing.
                              properties:
                                resolution:
                                  default: Required
                                  description: Resolution specifies whether resolution
                                    of this reference is required. The default is
                                    'Required', which means the reconcile will fail
                                    if the reference cannot be resolved. 'Optional'
                                    means this reference will be a no-op if it cannot
                                    be resolved.
                                  enum:
                                  - Required
                                  - Optional
                                  type: string
                                resolve:
                                  description: Resolve specifies when this reference
                                    should be resolved. The default is 'IfNotPresent',
                                    which will attempt to resolve the reference only
                                    when the corresponding field is not present. Use
                                    'Always' to resolve the reference on every reconcile.
                                  enum:
                                  - Always
                                  - IfNotPresent
                                  type: string
                              type: object
                          required:
                          - name
                          type: object
                        subnetIdSelector:
                          description: Selector for a Subnet to populate subnetId.
                          properties:
                            matchControllerRef:
                              description: MatchControllerRef ensures an object with
                                the same controller reference as the selecting object
                                is selected.
                              type: boolean
                            matchLabels:
                              additionalProperties:
                                type: string
                              description: MatchLabels ensures an object with matching
                                labels is selected.
                              type: object
                            policy:
                              description: Policies for selection.
                              properties:
                                resolution:
                                  default: Required
                                  description: Resolution specifies whether resolution
                                    of this reference is required. The default is
                                    'Required', which means the reconcile will fail
                                    if the reference cannot be resolved. 'Optional'
                                    means this reference will be a no-op if it cannot
                                    be resolved.
                                  enum:
                                  - Required
                                  - Optional
                                  type: string
                                resolve:
                                  description: Resolve specifies when this reference
                                    should be resolved. The default is 'IfNotPresent',
                                    which will attempt to resolve the reference only
                                    when the corresponding field is not present. Use
                                    'Always' to resolve the reference on every reconcile.
                                  enum:
                                  - Always
                                  - IfNotPresent
                                  type: string
                              type: object
                          type: object
                      type: object
                    type: array
                  macAddress:
                    description: optional string →  The additional MAC address. Specify
                      a specific MAC address for the port. Changing this creates a
                      new port.
                    type: string
                  name:
                    description: required string →  Name of the DHCP option. A unique
                      name for the port. Changing this updates the `name` of an existing
                      port.
                    type: string
                  networkId:
                    description: required string →  The ID of the network to attach
                      the port to. Changing this creates a new port. The ID of the
                      network to attach the port to. Changing this creates a new port.
                    type: string
                  networkIdRef:
                    description: Reference to a Network to populate networkId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  networkIdSelector:
                    description: Selector for a Network to populate networkId.
                    properties:
                      matchControllerRef:
                        description: MatchControllerRef ensures an object with the
                          same controller reference as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  noFixedIp:
                    description: optional boolean →  (Conflicts with fixed_ip) Create
                      a port with no fixed IP address. This will also remove any fixed
                      IPs previously set on a port. true is the only valid value for
                      this argument. (Conflicts with `fixed_ip`) Create a port with
                      no fixed IP address. This will also remove any fixed IPs previously
                      set on a port. `true` is the only valid value for this argument.
                    type: boolean
                  noSecurityGroups:
                    description: optional boolean →  (Conflicts with security_group_ids)
                      If set to true, then no security groups are applied to the port.
                      If set to false and no security_group_ids are specified, then
                      the port will yield to the default behavior of the Networking
                      service, which is to usually apply the "default" security group.
                      (Conflicts with `security_group_ids`) If set to `true`, then
                      no security groups are applied to the port. If set to `false`
                      and no `security_group_ids` are specified, then the port will
                      yield to the default behavior of the Networking service, which
                      is to usually apply the "default" security group.
                    type: boolean
                  portSecurityEnabled:
                    description: optional boolean →  Whether to explicitly enable
                      or disable port security on the port. Port Security is usually
                      enabled by default, so omitting argument will usually result
                      in a value of true. Setting this explicitly to false will disable
                      port security. In order to disable port security, the port must
                      not have any security groups. Valid values are true and false.
                      Whether to explicitly enable or disable port security on the
                      port. Port Security is usually enabled by default, so omitting
                      argument will usually result in a value of `true`. Setting this
                      explicitly to `false` will disable port security. In order to
                      disable port security, the port must not have any security groups.
                      Valid values are `true` and `false`.
                    type: boolean
                  region:
                    description: optional string →  The region in which to obtain
                      the Networking client. A Networking client is needed to create
                      a port. If omitted, the region argument of the provider is used.
                      Changing this creates a new port. The region in which to obtain
                      the Networking client. A Networking client is needed to create
                      a port. If omitted, the `region` argument of the provider is
                      used. Changing this creates a new port.
                    type: string
                  sdn:
                    description: 'optional string →  SDN to use for this resource.
                      Must be one of following: "neutron", "sprut". Default value
                      is project''s default SDN. SDN to use for this resource. Must
                      be one of following: "neutron", "sprut". Default value is project''s
                      default SDN.'
                    type: string
                  securityGroupIds:
                    description: optional set of string →  (Conflicts with no_security_groups)
                      A list of security group IDs to apply to the port. The security
                      groups must be specified by ID and not name (as opposed to how
                      they are configured with the Compute Instance). (Conflicts with
                      `no_security_groups`) A list of security group IDs to apply
                      to the port. The security groups must be specified by ID and
                      not name (as opposed to how they are configured with the Compute
                      Instance).
                    items:
                      type: string
                    type: array
                  securityGroupIdsRefs:
                    description: References to Secgroup to populate securityGroupIds.
                    items:
                      description: A Reference to a named object.
                      properties:
                        name:
                          description: Name of the referenced object.
                          type: string
                        policy:
                          description: Policies for referencing.
                          properties:
                            resolution:
                              default: Required
                              description: Resolution specifies whether resolution
                                of this reference is required. The default is 'Required',
                                which means the reconcile will fail if the reference
                                cannot be resolved. 'Optional' means this reference
                                will be a no-op if it cannot be resolved.
                              enum:
                              - Required
                              - Optional
                              type: string
                            resolve:
                              description: Resolve specifies when this reference should
                                be resolved. The default is 'IfNotPresent', which
                                will attempt to resolve the reference only when the
                                corresponding field is not present. Use 'Always' to
                                resolve the reference on every reconcile.
                              enum:
                              - Always
                              - IfNotPresent
                              type: string
                          type: object
                      required:
                      - name
                      type: object
                    type: array
                  securityGroupIdsSelector:
                    description: Selector for a list of Secgroup to populate securityGroupIds.
                    properties:
                      matchControllerRef:
                        description: MatchControllerRef ensures an object with the
                          same controller reference as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  tags:
                    description: optional set of string →  A set of string tags for
                      the port. A set of string tags for the port.
                    items:
                      type: string
                    type: array
                  valueSpecs:
                    additionalProperties:
                      type: string
                    description: optional map of string →  Map of additional options.
                      Map of additional options.
                    type: object
                type: object
              initProvider:
                description: THIS IS A BETA FIELD. It will be honored unless the Management
                  Policies feature flag is disabled. InitProvider holds the same fields
                  as ForProvider, with the exception of Identifier and other resource
                  reference fields. The fields that are in InitProvider are merged
                  into ForProvider when the resource is created. The same fields are
                  also added to the terraform ignore_changes hook, to avoid updating
                  them after creation. This is useful for fields that are required
                  on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them,
                  like an autoscaler.
                properties:
                  adminStateUp:
                    description: optional boolean →  Administrative up/down status
                      for the port (must be true or false if provided). Changing this
                      updates the admin_state_up of an existing port. Administrative
                      up/down status for the port (must be `true` or `false` if provided).
                      Changing this updates the `admin_state_up` of an existing port.
                    type: boolean
                  allowedAddressPairs:
                    description: optional →  An IP/MAC Address pair of additional
                      IP addresses that can be active on this port. The structure
                      is described below. An IP/MAC Address pair of additional IP
                      addresses that can be active on this port. The structure is
                      described below.
                    items:
                      properties:
                        ipAddress:
                          description: required string →  The additional IP address.
                            The additional IP address.
                          type: string
                        macAddress:
                          description: optional string →  The additional MAC address.
                            The additional MAC address.
                          type: string
                      type: object
                    type: array
                  description:
                    description: readable description of the port. Changing this updates
                      the description of an existing port. Human-readable description
                      of the port. Changing this updates the `description` of an existing
                      port.
                    type: string
                  deviceId:
                    description: optional string →  The ID of the device attached
                      to the port. Changing this creates a new port. The ID of the
                      device attached to the port. Changing this creates a new port.
                    type: string
                  deviceOwner:
                    description: optional string →  The device owner of the port.
                      Changing this creates a new port. The device owner of the port.
                      Changing this creates a new port.
                    type: string
                  dnsName:
                    description: optional string →  The port DNS name. The port DNS
                      name.
                    type: string
                  extraDhcpOption:
                    description: optional →  An extra DHCP option that needs to be
                      configured on the port. The structure is described below. Can
                      be specified multiple times. An extra DHCP option that needs
                      to be configured on the port. The structure is described below.
                      Can be specified multiple times.
                    items:
                      properties:
                        name:
                          description: required string →  Name of the DHCP option.
                            Name of the DHCP option.
                          type: string
                        value:
                          description: required string →  Value of the DHCP option.
                            Value of the DHCP option.
                          type: string
                      type: object
                    type: array
                  fixedIp:
                    description: optional →  (Conflicts with no_fixed_ip) An array
                      of desired IPs for this port. The structure is described below.
                      (Conflicts with `no_fixed_ip`) An array of desired IPs for this
                      port. The structure is described below.
                    items:
                      properties:
                        ipAddress:
                          description: required string →  The additional IP address.
                            IP address desired in the subnet for this port. If you
                            don't specify `ip_address`, an available IP address from
                            the specified subnet will be allocated to this port. This
                            field will not be populated if it is left blank or omitted.
                            To retrieve the assigned IP address, use the `all_fixed_ips`
                            attribute.
                          type: string
                      type: object
                    type: array
                  macAddress:
                    description: optional string →  The additional MAC address. Specify
                      a specific MAC address for the port. Changing this creates a
                      new port.
                    type: string
                  name:
                    description: required string →  Name of the DHCP option. A unique
                      name for the port. Changing this updates the `name` of an existing
                      port.
                    type: string
                  noFixedIp:
                    description: optional boolean →  (Conflicts with fixed_ip) Create
                      a port with no fixed IP address. This will also remove any fixed
                      IPs previously set on a port. true is the only valid value for
                      this argument. (Conflicts with `fixed_ip`) Create a port with
                      no fixed IP address. This will also remove any fixed IPs previously
                      set on a port. `true` is the only valid value for this argument.
                    type: boolean
                  noSecurityGroups:
                    description: optional boolean →  (Conflicts with security_group_ids)
                      If set to true, then no security groups are applied to the port.
                      If set to false and no security_group_ids are specified, then
                      the port will yield to the default behavior of the Networking
                      service, which is to usually apply the "default" security group.
                      (Conflicts with `security_group_ids`) If set to `true`, then
                      no security groups are applied to the port. If set to `false`
                      and no `security_group_ids` are specified, then the port will
                      yield to the default behavior of the Networking service, which
                      is to usually apply the "default" security group.
                    type: boolean
                  portSecurityEnabled:
                    description: optional boolean →  Whether to explicitly enable
                      or disable port security on the port. Port Security is usually
                      enabled by default, so omitting argument will usually result
                      in a value of true. Setting this explicitly to false will disable
                      port security. In order to disable port security, the port must
                      not have any security groups. Valid values are true and false.
                      Whether to explicitly enable or disable port security on the
                      port. Port Security is usually enabled by default, so omitting
                      argument will usually result in a value of `true`. Setting this
                      explicitly to `false` will disable port security. In order to
                      disable port security, the port must not have any security groups.
                      Valid values are `true` and `false`.
                    type: boolean
                  region:
                    description: optional string →  The region in which to obtain
                      the Networking client. A Networking client is needed to create
                      a port. If omitted, the region argument of the provider is used.
                      Changing this creates a new port. The region in which to obtain
                      the Networking client. A Networking client is needed to create
                      a port. If omitted, the `region` argument of the provider is
                      used. Changing this creates a new port.
                    type: string
                  sdn:
                    description: 'optional string →  SDN to use for this resource.
                      Must be one of following: "neutron", "sprut". Default value
                      is project''s default SDN. SDN to use for this resource. Must
                      be one of following: "neutron", "sprut". Default value is project''s
                      default SDN.'
                    type: string
                  tags:
                    description: optional set of string →  A set of string tags for
                      the port. A set of string tags for the port.
                    items:
                      type: string
                    type: array
                  valueSpecs:
                    additionalProperties:
                      type: string
                    description: optional map of string →  Map of additional options.
                      Map of additional options.
                    type: object
                type: object
              managementPolicies:
                default:
                - '*'
                description: 'THIS IS A BETA FIELD. It is on by default but can be
                  opted out through a Crossplane feature flag. ManagementPolicies
                  specify the array of actions Crossplane is allowed to take on the
                  managed and external resources. This field is planned to replace
                  the DeletionPolicy field in a future release. Currently, both could
                  be set independently and non-default values would be honored if
                  the feature flag is enabled. If both are custom, the DeletionPolicy
                  field will be ignored. See the design doc for more information:
                  https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md'
                items:
                  description: A ManagementAction represents an action that the Crossplane
                    controllers can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: PortStatus defines the observed state of Port.
            properties:
              atProvider:
                properties:
                  adminStateUp:
                    description: optional boolean →  Administrative up/down status
                      for the port (must be true or false if provided). Changing this
                      updates the admin_state_up of an existing port. Administrative
                      up/down status for the port (must be `true` or `false` if provided).
                      Changing this updates the `admin_state_up` of an existing port.
                    type: boolean
                  allFixedIps:
                    description: string →  The collection of Fixed IP addresses on
                      the port in the order returned by the Network v2 API. The collection
                      of Fixed IP addresses on the port in the order returned by the
                      Network v2 API.
                    items:
                      type: string
                    type: array
                  allSecurityGroupIds:
                    description: set of string →  The collection of Security Group
                      IDs on the port which have been explicitly and implicitly added.
                      The collection of Security Group IDs on the port which have
                      been explicitly and implicitly added.
                    items:
                      type: string
                    type: array
                  allTags:
                    description: set of string →  The collection of tags assigned
                      on the port, which have been explicitly and implicitly added.
                      The collection of tags assigned on the port, which have been
                      explicitly and implicitly added.
                    items:
                      type: string
                    type: array
                  allowedAddressPairs:
                    description: optional →  An IP/MAC Address pair of additional
                      IP addresses that can be active on this port. The structure
                      is described below. An IP/MAC Address pair of additional IP
                      addresses that can be active on this port. The structure is
                      described below.
                    items:
                      properties:
                        ipAddress:
                          description: required string →  The additional IP address.
                            The additional IP address.
                          type: string
                        macAddress:
                          description: optional string →  The additional MAC address.
                            The additional MAC address.
                          type: string
                      type: object
                    type: array
                  description:
                    description: readable description of the port. Changing this updates
                      the description of an existing port. Human-readable description
                      of the port. Changing this updates the `description` of an existing
                      port.
                    type: string
                  deviceId:
                    description: optional string →  The ID of the device attached
                      to the port. Changing this creates a new port. The ID of the
                      device attached to the port. Changing this creates a new port.
                    type: string
                  deviceOwner:
                    description: optional string →  The device owner of the port.
                      Changing this creates a new port. The device owner of the port.
                      Changing this creates a new port.
                    type: string
                  dnsAssignment:
                    description: map of string →  The list of maps representing port
                      DNS assignments. The list of maps representing port DNS assignments.
                    items:
                      additionalProperties:
                        type: string
                      type: object
                    type: array
                  dnsName:
                    description: optional string →  The port DNS name. The port DNS
                      name.
                    type: string
                  extraDhcpOption:
                    description: optional →  An extra DHCP option that needs to be
                      configured on the port. The structure is described below. Can
                      be specified multiple times. An extra DHCP option that needs
                      to be configured on the port. The structure is described below.
                      Can be specified multiple times.
                    items:
                      properties:
                        name:
                          description: required string →  Name of the DHCP option.
                            Name of the DHCP option.
                          type: string
                        value:
                          description: required string →  Value of the DHCP option.
                            Value of the DHCP option.
                          type: string
                      type: object
                    type: array
                  fixedIp:
                    description: optional →  (Conflicts with no_fixed_ip) An array
                      of desired IPs for this port. The structure is described below.
                      (Conflicts with `no_fixed_ip`) An array of desired IPs for this
                      port. The structure is described below.
                    items:
                      properties:
                        ipAddress:
                          description: required string →  The additional IP address.
                            IP address desired in the subnet for this port. If you
                            don't specify `ip_address`, an available IP address from
                            the specified subnet will be allocated to this port. This
                            field will not be populated if it is left blank or omitted.
                            To retrieve the assigned IP address, use the `all_fixed_ips`
                            attribute.
                          type: string
                        subnetId:
                          description: required string →  Subnet in which to allocate
                            IP address for this port. Subnet in which to allocate
                            IP address for this port.
                          type: string
                      type: object
                    type: array
                  id:
                    description: string →  ID of the resource.
                    type: string
                  macAddress:
                    description: optional string →  The additional MAC address. Specify
                      a specific MAC address for the port. Changing this creates a
                      new port.
                    type: string
                  name:
                    description: required string →  Name of the DHCP option. A unique
                      name for the port. Changing this updates the `name` of an existing
                      port.
                    type: string
                  networkId:
                    description: required string →  The ID of the network to attach
                      the port to. Changing this creates a new port. The ID of the
                      network to attach the port to. Changing this creates a new port.
                    type: string
                  noFixedIp:
                    description: optional boolean →  (Conflicts with fixed_ip) Create
                      a port with no fixed IP address. This will also remove any fixed
                      IPs previously set on a port. true is the only valid value for
                      this argument. (Conflicts with `fixed_ip`) Create a port with
                      no fixed IP address. This will also remove any fixed IPs previously
                      set on a port. `true` is the only valid value for this argument.
                    type: boolean
                  noSecurityGroups:
                    description: optional boolean →  (Conflicts with security_group_ids)
                      If set to true, then no security groups are applied to the port.
                      If set to false and no security_group_ids are specified, then
                      the port will yield to the default behavior of the Networking
                      service, which is to usually apply the "default" security group.
                      (Conflicts with `security_group_ids`) If set to `true`, then
                      no security groups are applied to the port. If set to `false`
                      and no `security_group_ids` are specified, then the port will
                      yield to the default behavior of the Networking service, which
                      is to usually apply the "default" security group.
                    type: boolean
                  portSecurityEnabled:
                    description: optional boolean →  Whether to explicitly enable
                      or disable port security on the port. Port Security is usually
                      enabled by default, so omitting argument will usually result
                      in a value of true. Setting this explicitly to false will disable
                      port security. In order to disable port security, the port must
                      not have any security groups. Valid values are true and false.
                      Whether to explicitly enable or disable port security on the
                      port. Port Security is usually enabled by default, so omitting
                      argument will usually result in a value of `true`. Setting this
                      explicitly to `false` will disable port security. In order to
                      disable port security, the port must not have any security groups.
                      Valid values are `true` and `false`.
                    type: boolean
                  region:
                    description: optional string →  The region in which to obtain
                      the Networking client. A Networking client is needed to create
                      a port. If omitted, the region argument of the provider is used.
                      Changing this creates a new port. The region in which to obtain
                      the Networking client. A Networking client is needed to create
                      a port. If omitted, the `region` argument of the provider is
                      used. Changing this creates a new port.
                    type: string
                  sdn:
                    description: 'optional string →  SDN to use for this resource.
                      Must be one of following: "neutron", "sprut". Default value
                      is project''s default SDN. SDN to use for this resource. Must
                      be one of following: "neutron", "sprut". Default value is project''s
                      default SDN.'
                    type: string
                  securityGroupIds:
                    description: optional set of string →  (Conflicts with no_security_groups)
                      A list of security group IDs to apply to the port. The security
                      groups must be specified by ID and not name (as opposed to how
                      they are configured with the Compute Instance). (Conflicts with
                      `no_security_groups`) A list of security group IDs to apply
                      to the port. The security groups must be specified by ID and
                      not name (as opposed to how they are configured with the Compute
                      Instance).
                    items:
                      type: string
                    type: array
                  tags:
                    description: optional set of string →  A set of string tags for
                      the port. A set of string tags for the port.
                    items:
                      type: string
                    type: array
                  valueSpecs:
                    additionalProperties:
                      type: string
                    description: optional map of string →  Map of additional options.
                      Map of additional options.
                    type: object
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
